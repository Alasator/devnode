version: '3'
services:

  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: digitalocean.com/php
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
    networks:
      - app-network

  #Nginx Service
#  webserver:
#    image: nginx:alpine
#    container_name: webserver
#    restart: unless-stopped
#    tty: true
#    ports:
#      - "80:80"
#      - "443:443"
#      - "6001:6001"
#    volumes:
#      - ./:/var/www
#      - ./nginx/conf.d/:/etc/nginx/conf.d/
#    networks:
#      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.3.2
    environment:
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"

  kibana:
    image: docker.elastic.co/kibana/kibana:6.3.2
    ports:
      - "5601:5601"

  #MySQL Service
  db:
    image: mysql:5.7.22
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "3307:3307"
    volumes:
      - dbdata:/var/lib/mysql
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    environment:
      MYSQL_DATABASE: wordpressuser
      MYSQL_ROOT_PASSWORD: Zgm384PP5eCUa4g
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - app-network

  redis:
    image: redis:alpine

  php-worker:
    build: ./php-worker
    container_name: php-worker
    volumes:
      - ..:/var/www
    links:
      - redis
      - db

  php-cron:
    build: ./php-cron
    container_name: php-cron
    volumes:
      - ..:/var/www
    links:
      - redis
      - db

  php-horizon:
    build: ./php-horizon
    container_name: php-horizon
    volumes:
      - ..:/var/www
    links:
      - redis
      - db

#Docker Networks
networks:
  app-network:
    driver: bridge

#Volumes
volumes:
  dbdata:
    driver: local
